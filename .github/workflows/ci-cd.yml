name: CI/CD Pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build-and-dockerize:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Define image tag
        run: echo "IMAGE_TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Get changed files
        id: changes
        run: |
          CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | tr '\n' ' ')
          echo "CHANGED=$CHANGED" >> $GITHUB_ENV

      - name: Build and Push Changed Services
        run: |
          set -e
          echo "Changed files (comma-separated):"
          echo "${CHANGED}"

          # Convert comma-separated list to newline-separated
          FILES=$(echo "${CHANGED}" | tr "," "\n")

          if echo "$FILES" | grep -q "^ServiceRegistry/"; then
            echo "Building ServiceRegistry..."
            cd ServiceRegistry && mvn clean package -DskipTests && cd ..
            docker build -t ${{ secrets.DOCKER_USERNAME }}/serviceregistry:${{ env.IMAGE_TAG }} ./ServiceRegistry
            docker push ${{ secrets.DOCKER_USERNAME }}/serviceregistry:${{ env.IMAGE_TAG }}
          fi

          if echo "$FILES" | grep -q "^URLShortener/"; then
            echo "Building URLShortener..."
            cd URLShortener && mvn clean package -DskipTests && cd ..
            docker build -t ${{ secrets.DOCKER_USERNAME }}/urlshortener:${{ env.IMAGE_TAG }} ./URLShortener
            docker push ${{ secrets.DOCKER_USERNAME }}/urlshortener:${{ env.IMAGE_TAG }}
          fi

          if echo "$FILES" | grep -q "^URLRedirection/"; then
            echo "Building URLRedirection..."
            cd URLRedirection && mvn clean package -DskipTests && cd ..
            docker build -t ${{ secrets.DOCKER_USERNAME }}/urlredirection:${{ env.IMAGE_TAG }} ./URLRedirection
            docker push ${{ secrets.DOCKER_USERNAME }}/urlredirection:${{ env.IMAGE_TAG }}
          fi

          if echo "$FILES" | grep -q "^URLAnalytics/"; then
            echo "Building URLAnalytics..."
            cd URLAnalytics && mvn clean package -DskipTests && cd ..
            docker build -t ${{ secrets.DOCKER_USERNAME }}/urlanalytics:${{ env.IMAGE_TAG }} ./URLAnalytics
            docker push ${{ secrets.DOCKER_USERNAME }}/urlanalytics:${{ env.IMAGE_TAG }}
          fi

          if echo "$FILES" | grep -q "^ApiGateway/"; then
            echo "Building ApiGateway..."
            cd ApiGateway && mvn clean package -DskipTests && cd ..
            docker build -t ${{ secrets.DOCKER_USERNAME }}/apigateway:${{ env.IMAGE_TAG }} ./ApiGateway
            docker push ${{ secrets.DOCKER_USERNAME }}/apigateway:${{ env.IMAGE_TAG }}
          fi
