name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-dockerize:
    runs-on: ubuntu-${{ env.IMAGE_TAG }}

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build all services
      run: |
        cd ServiceRegistry && mvn clean package -DskipTests && cd ..
        cd URLShortener && mvn clean package -DskipTests && cd ..
        cd URLRedirection && mvn clean package -DskipTests && cd ..
        cd URLAnalytics && mvn clean package -DskipTests && cd ..
        cd ApiGateway && mvn clean package -DskipTests && cd ..

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Define image tag
      run: echo "IMAGE_TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV

    - name: Build Docker images
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/urlshortener:${{ env.IMAGE_TAG }} ./URLShortener
        docker build -t ${{ secrets.DOCKER_USERNAME }}/urlredirection:${{ env.IMAGE_TAG }} ./URLRedirection
        docker build -t ${{ secrets.DOCKER_USERNAME }}/urlanalytics:${{ env.IMAGE_TAG }} ./URLAnalytics
        docker build -t ${{ secrets.DOCKER_USERNAME }}/apigateway:${{ env.IMAGE_TAG }} ./ApiGateway
        docker build -t ${{ secrets.DOCKER_USERNAME }}/serviceregistry:${{ env.IMAGE_TAG }} ./ServiceRegistry

    - name: Push Docker images
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/urlshortener:${{ env.IMAGE_TAG }}
        docker push ${{ secrets.DOCKER_USERNAME }}/urlredirection:${{ env.IMAGE_TAG }}
        docker push ${{ secrets.DOCKER_USERNAME }}/urlanalytics:${{ env.IMAGE_TAG }}
        docker push ${{ secrets.DOCKER_USERNAME }}/apigateway:${{ env.IMAGE_TAG }}
        docker push ${{ secrets.DOCKER_USERNAME }}/serviceregistry:${{ env.IMAGE_TAG }}
